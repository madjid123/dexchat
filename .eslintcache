[{"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\index.tsx":"1","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\App.tsx":"2","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\app\\store.ts":"3","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\user\\authSlice.ts":"4","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\URL.ts":"5","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\UserSpace.tsx":"6","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\NavBar.tsx":"7","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Auth\\Register.tsx":"8","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Auth\\Login.tsx":"9","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Conversation.tsx":"10","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\user\\RoomsSlice.ts":"11","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Rooms.tsx":"12"},{"size":340,"mtime":1628171918838,"results":"13","hashOfConfig":"14"},{"size":1314,"mtime":1628710604788,"results":"15","hashOfConfig":"14"},{"size":581,"mtime":1629244882952,"results":"16","hashOfConfig":"14"},{"size":3440,"mtime":1629251890981,"results":"17","hashOfConfig":"14"},{"size":58,"mtime":1628551194252,"results":"18","hashOfConfig":"14"},{"size":1585,"mtime":1629988175888,"results":"19","hashOfConfig":"14"},{"size":1395,"mtime":1628712199499,"results":"20","hashOfConfig":"14"},{"size":4981,"mtime":1628610366073,"results":"21","hashOfConfig":"14"},{"size":2985,"mtime":1628708648188,"results":"22","hashOfConfig":"14"},{"size":3752,"mtime":1630256240439,"results":"23","hashOfConfig":"14"},{"size":1525,"mtime":1629562042393,"results":"24","hashOfConfig":"14"},{"size":1623,"mtime":1629736179497,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1l4gn6v",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\index.tsx",[],["55","56"],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\App.tsx",["57","58"],"// React\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\n//Redux\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n// Components\r\nimport Register from \"./components/Auth/Register\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Login from \"./components/Auth/Login\";\r\nimport UserSpace from \"./components/UserSpace\";\r\n\r\n// Styling\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport { AuthSelector, CheckisAuth } from \"./features/user/authSlice\";\r\n\r\n\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const History = useHistory();\r\n  const { isAuth } = useSelector(AuthSelector)\r\n  useEffect(() => {\r\n    dispatch(CheckisAuth())\r\n\r\n  }, [!isAuth])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Router >\r\n        <NavBar history={History} ></NavBar>\r\n        {isAuth && <Redirect to=\"/user\"></Redirect>}\r\n        <Switch>\r\n          <Route path=\"/user\">\r\n            <UserSpace  ></UserSpace>\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login\r\n            ></Login>\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <Register> </Register>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\app\\store.ts",["59"],"import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport AuthReducer from \"../features/user/authSlice\";\r\nimport RoomsReducer from \"../features/user/RoomsSlice\"\r\nexport const store = configureStore({\r\n  reducer: {\r\n    AuthReducer,\r\n    RoomsReducer\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\nfunction add(a: number, b: number): number {\r\n  return a + b;\r\n}\r\n","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\user\\authSlice.ts",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\URL.ts",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\UserSpace.tsx",["60","61","62"],"\r\nimport Rooms, { Room } from './Rooms'\r\nimport Conversation from './Conversation'\r\n\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { AuthSelector } from \"../features/user/authSlice\";\r\nimport { RoomsSelector, getRooms } from \"../features/user/RoomsSlice\"\r\n\r\ninterface User {\r\n    _id: string,\r\n    name: string\r\n}\r\nconst UserSpace = (props: any) => {\r\n    const [Member, setMember] = useState({} as any)\r\n    const dispatch = useDispatch();\r\n    const { currentUser, isAuth } = useSelector(AuthSelector)\r\n    const [clearMsgs, setClearMsgs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let id = undefined\r\n        if (currentUser !== undefined) {\r\n            id = currentUser._id\r\n            dispatch(getRooms({ id: id }))\r\n        }\r\n\r\n    }, [currentUser, isAuth])\r\n    const { rooms } = useSelector(RoomsSelector)\r\n    const setConversation = (index: number) => {\r\n        const room = rooms[index]\r\n\r\n        room.members.forEach(member => {\r\n\r\n            if (member._id !== currentUser?._id) {\r\n                console.log(member._id)\r\n                setMember(member)\r\n                return;\r\n            }\r\n        })\r\n\r\n    }\r\n    const SetClearMsgs = (b: boolean) => { setClearMsgs(b) }\r\n    return (\r\n        <div className=\"box-flex\" style={{ \"height\": \"100%\" }}>\r\n            <Rooms setConversation={setConversation}  ></Rooms>\r\n            <Conversation member={Member} clearMsgs={clearMsgs} setClearMsgs={SetClearMsgs}></Conversation>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserSpace;","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\NavBar.tsx",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Auth\\Register.tsx",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Auth\\Login.tsx",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Conversation.tsx",["63","64","65","66"],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\user\\RoomsSlice.ts",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Rooms.tsx",["67","68","69","70","71","72"],"/* eslint-disable array-callback-return */\r\nimport { ProSidebar, Menu, MenuItem, SidebarHeader } from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\nimport { useState, useEffect, SetStateAction } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AuthSelector } from \"../features/user/authSlice\";\r\nimport { RoomsSelector } from \"../features/user/RoomsSlice\"\r\n\r\n\r\nexport interface Room {\r\n  members: any[2];\r\n}\r\nconst Rooms = (props: any) => {\r\n\r\n  const { rooms } = useSelector(RoomsSelector)\r\n\r\n  const { currentUser, isAuth } = useSelector(AuthSelector)\r\n  return (\r\n    <>\r\n      <ProSidebar className=\"sidebar\">\r\n        <SidebarHeader>\r\n          <h1> Rooms</h1>\r\n          <br></br>\r\n        </SidebarHeader>\r\n        <Menu iconShape=\"square\" >\r\n          {\r\n            rooms.map((room: any, index: number) => {\r\n              return (\r\n                <MenuItem\r\n                  key={index}\r\n                  onClick={() => { props.setConversation(index) }}\r\n                >\r\n                  <img\r\n                    key={index}\r\n                    src={\"logo192.png\"}\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    alt=\"\"\r\n                  />\r\n                  <div>\r\n                    {room.members.map((member: any) => { if (currentUser && member._id !== currentUser._id) return member.name; })}\r\n                  </div>\r\n                </MenuItem>)\r\n            })\r\n          }\r\n        </Menu>\r\n      </ProSidebar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rooms;\r\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":33,"column":6,"nodeType":"79","endLine":33,"endColumn":15,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":33,"column":7,"nodeType":"82","endLine":33,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":19,"column":10,"nodeType":"85","messageId":"86","endLine":19,"endColumn":13},{"ruleId":"83","severity":1,"message":"87","line":2,"column":17,"nodeType":"85","messageId":"86","endLine":2,"endColumn":21},{"ruleId":"83","severity":1,"message":"88","line":12,"column":11,"nodeType":"85","messageId":"86","endLine":12,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":29,"column":8,"nodeType":"79","endLine":29,"endColumn":29,"suggestions":"89"},{"ruleId":"83","severity":1,"message":"90","line":3,"column":14,"nodeType":"85","messageId":"86","endLine":3,"endColumn":20},{"ruleId":"83","severity":1,"message":"91","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":17},{"ruleId":"83","severity":1,"message":"92","line":13,"column":26,"nodeType":"85","messageId":"86","endLine":13,"endColumn":32},{"ruleId":"83","severity":1,"message":"93","line":14,"column":20,"nodeType":"85","messageId":"86","endLine":14,"endColumn":29},{"ruleId":"83","severity":1,"message":"94","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":13},{"ruleId":"83","severity":1,"message":"95","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":11},{"ruleId":"83","severity":1,"message":"96","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":18},{"ruleId":"83","severity":1,"message":"97","line":6,"column":20,"nodeType":"85","messageId":"86","endLine":6,"endColumn":29},{"ruleId":"83","severity":1,"message":"98","line":6,"column":31,"nodeType":"85","messageId":"86","endLine":6,"endColumn":45},{"ruleId":"83","severity":1,"message":"92","line":19,"column":24,"nodeType":"85","messageId":"86","endLine":19,"endColumn":30},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","@typescript-eslint/no-unused-vars","'add' is defined but never used.","Identifier","unusedVar","'Room' is defined but never used.","'User' is defined but never used.",["102"],"'Socket' is defined but never used.","'current' is defined but never used.","'isAuth' is assigned a value but never used.","'setSocket' is assigned a value but never used.","'axios' is defined but never used.","'URL' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'SetStateAction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [dispatch]",{"range":"107","text":"108"},"Update the dependencies array to be: [currentUser, dispatch, isAuth]",{"range":"109","text":"110"},[787,796],"[dispatch]",[822,843],"[currentUser, dispatch, isAuth]"]