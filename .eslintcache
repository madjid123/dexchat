[{"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\index.tsx":"1","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\App.tsx":"2","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\app\\store.ts":"3","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\user\\authSlice.ts":"4","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\URL.ts":"5","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\UserSpace.tsx":"6","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\NavBar.tsx":"7","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Auth\\Register.tsx":"8","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Auth\\Login.tsx":"9","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Conversation.tsx":"10","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\user\\RoomsSlice.ts":"11","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Rooms.tsx":"12"},{"size":340,"mtime":1628171918838,"results":"13","hashOfConfig":"14"},{"size":1314,"mtime":1628710604788,"results":"15","hashOfConfig":"14"},{"size":581,"mtime":1629244882952,"results":"16","hashOfConfig":"14"},{"size":3440,"mtime":1629242021507,"results":"17","hashOfConfig":"14"},{"size":58,"mtime":1628551194252,"results":"18","hashOfConfig":"14"},{"size":1232,"mtime":1629247135559,"results":"19","hashOfConfig":"14"},{"size":1395,"mtime":1628712199499,"results":"20","hashOfConfig":"14"},{"size":4981,"mtime":1628610366073,"results":"21","hashOfConfig":"14"},{"size":2985,"mtime":1628708648188,"results":"22","hashOfConfig":"14"},{"size":2692,"mtime":1628615019775,"results":"23","hashOfConfig":"14"},{"size":1451,"mtime":1629246979387,"results":"24","hashOfConfig":"14"},{"size":1628,"mtime":1629247795885,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1l4gn6v",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\index.tsx",[],["53","54"],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\App.tsx",["55","56"],"// React\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\n//Redux\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n// Components\r\nimport Register from \"./components/Auth/Register\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Login from \"./components/Auth/Login\";\r\nimport UserSpace from \"./components/UserSpace\";\r\n\r\n// Styling\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport { AuthSelector, CheckisAuth } from \"./features/user/authSlice\";\r\n\r\n\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const History = useHistory();\r\n  const { isAuth } = useSelector(AuthSelector)\r\n  useEffect(() => {\r\n    dispatch(CheckisAuth())\r\n\r\n  }, [!isAuth])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Router >\r\n        <NavBar history={History} ></NavBar>\r\n        {isAuth && <Redirect to=\"/user\"></Redirect>}\r\n        <Switch>\r\n          <Route path=\"/user\">\r\n            <UserSpace  ></UserSpace>\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login\r\n            ></Login>\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <Register> </Register>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\app\\store.ts",["57"],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\user\\authSlice.ts",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\URL.ts",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\UserSpace.tsx",["58","59","60"],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\NavBar.tsx",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Auth\\Register.tsx",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Auth\\Login.tsx",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Conversation.tsx",["61","62"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { io } from 'socket.io-client'\r\nimport { Menu, MenuItem } from 'react-pro-sidebar'\r\nimport { useSelector } from 'react-redux';\r\nimport { AuthSelector } from '../features/user/authSlice';\r\n\r\n\r\n\r\nvar socket = io(\"localhost:5001\", { transports: ['websocket'] })\r\nsocket.connect()\r\n\r\nfunction Conversation(props: any) {\r\n    const { currentUser, isAuth } = useSelector(AuthSelector)\r\n    const [message, setMessage] = useState(\"\" as string)\r\n    const [messages, setMessages] = useState([] as any[])\r\n\r\n    socket.emit('sendusr', { currentUser: currentUser })\r\n    socket.once(\"getmsg\", (data: any) => {\r\n        if (data.toid !== props.user.id) return;\r\n        const msgs = messages\r\n        msgs.push({ sender: data.username, message: data.message })\r\n        setMessages(msgs)\r\n    })\r\n\r\n    const onMessage = () => {\r\n        if (message === '') return;\r\n        console.log(props.user)\r\n        socket.emit('sendmsg', {\r\n            from: props.me.id,\r\n            name: props.user.name,\r\n            toid: props.user.id,\r\n            msg: message\r\n        })\r\n        const msgs = messages\r\n        msgs.push({ sender: props.me.username, message: message })\r\n        setMessages(msgs)\r\n        setMessage(\"\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!props.clearMsgs) return;\r\n        props.setClearMsgs(false);\r\n        setMessages([]);\r\n\r\n    }, [props])\r\n\r\n    return (\r\n        <div className='conversation'>\r\n            {props.user.name &&\r\n                <div style={{ height: '95%', overflowY: 'auto', overflowX: 'hidden', scrollBehavior: 'smooth' }} >\r\n                    <h1>{props.user.name}</h1>\r\n                    <Menu iconShape='square'>\r\n\r\n                        {messages.map((msg, index) => {\r\n                            return (\r\n                                <MenuItem key={index}  >\r\n                                    <h5>{msg.sender}</h5>\r\n                                    <br></br>\r\n                                    <a>{msg.message}</a>\r\n                                    <hr style={{ color: '#fff' }}></hr>\r\n                                </MenuItem>\r\n                            );\r\n\r\n                        })}\r\n                    </Menu>\r\n                    <div className='footer'>\r\n                        <input className='footer-input' type='text' onChange={(e) => { setMessage(e.target.value) }} value={message}></input>\r\n                        <Button onClick={() => { onMessage() }} >send</Button>\r\n                    </div>\r\n\r\n                </div >\r\n            }\r\n        </div >\r\n    )\r\n\r\n}\r\nexport default Conversation","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\user\\RoomsSlice.ts",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Rooms.tsx",["63","64","65","66","67","68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":33,"column":6,"nodeType":"76","endLine":33,"endColumn":15,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":33,"column":7,"nodeType":"79","endLine":33,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":19,"column":10,"nodeType":"82","messageId":"83","endLine":19,"endColumn":13},{"ruleId":"80","severity":1,"message":"84","line":2,"column":17,"nodeType":"82","messageId":"83","endLine":2,"endColumn":21},{"ruleId":"80","severity":1,"message":"85","line":17,"column":18,"nodeType":"82","messageId":"83","endLine":17,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":29,"column":8,"nodeType":"76","endLine":29,"endColumn":29,"suggestions":"86"},{"ruleId":"80","severity":1,"message":"87","line":14,"column":26,"nodeType":"82","messageId":"83","endLine":14,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":60,"column":37,"nodeType":"90","endLine":60,"endColumn":40},{"ruleId":"80","severity":1,"message":"91","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":13},{"ruleId":"80","severity":1,"message":"92","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":11},{"ruleId":"80","severity":1,"message":"93","line":6,"column":20,"nodeType":"82","messageId":"83","endLine":6,"endColumn":29},{"ruleId":"80","severity":1,"message":"94","line":6,"column":31,"nodeType":"82","messageId":"83","endLine":6,"endColumn":45},{"ruleId":"80","severity":1,"message":"95","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":23},{"ruleId":"80","severity":1,"message":"96","line":16,"column":17,"nodeType":"82","messageId":"83","endLine":16,"endColumn":25},{"ruleId":"80","severity":1,"message":"87","line":17,"column":24,"nodeType":"82","messageId":"83","endLine":17,"endColumn":30},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["99"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","@typescript-eslint/no-unused-vars","'add' is defined but never used.","Identifier","unusedVar","'Room' is defined but never used.","'setUser' is assigned a value but never used.",["100"],"'isAuth' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","'URL' is defined but never used.","'useEffect' is defined but never used.","'SetStateAction' is defined but never used.","'RoomsSelector' is defined but never used.","'setRooms' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [dispatch]",{"range":"105","text":"106"},"Update the dependencies array to be: [currentUser, dispatch, isAuth]",{"range":"107","text":"108"},[787,796],"[dispatch]",[811,832],"[currentUser, dispatch, isAuth]"]