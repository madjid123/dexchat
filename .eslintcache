[{"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\index.tsx":"1","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\App.tsx":"2","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\app\\store.ts":"3","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\user\\authSlice.ts":"4","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\URL.ts":"5","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\UserSpace.tsx":"6","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\NavBar.tsx":"7","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Auth\\Register.tsx":"8","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Auth\\Login.tsx":"9","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Conversation.tsx":"10","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\user\\RoomsSlice.ts":"11","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Rooms.tsx":"12","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\Conversation\\MessagesSlice.ts":"13","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\app\\hooks.ts":"14"},{"size":340,"mtime":1628171918838,"results":"15","hashOfConfig":"16"},{"size":1314,"mtime":1628710604788,"results":"17","hashOfConfig":"16"},{"size":609,"mtime":1630708731044,"results":"18","hashOfConfig":"16"},{"size":3440,"mtime":1629251890981,"results":"19","hashOfConfig":"16"},{"size":58,"mtime":1628551194252,"results":"20","hashOfConfig":"16"},{"size":1585,"mtime":1630791021323,"results":"21","hashOfConfig":"16"},{"size":1395,"mtime":1628712199499,"results":"22","hashOfConfig":"16"},{"size":4981,"mtime":1628610366073,"results":"23","hashOfConfig":"16"},{"size":2985,"mtime":1628708648188,"results":"24","hashOfConfig":"16"},{"size":4585,"mtime":1630803199606,"results":"25","hashOfConfig":"16"},{"size":1525,"mtime":1629562042393,"results":"26","hashOfConfig":"16"},{"size":1623,"mtime":1630437700445,"results":"27","hashOfConfig":"16"},{"size":947,"mtime":1630713364597,"results":"28","hashOfConfig":"16"},{"size":350,"mtime":1628551194252,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1l4gn6v",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\index.tsx",[],["62","63"],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\App.tsx",["64","65"],"// React\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\n//Redux\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n// Components\r\nimport Register from \"./components/Auth/Register\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Login from \"./components/Auth/Login\";\r\nimport UserSpace from \"./components/UserSpace\";\r\n\r\n// Styling\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport { AuthSelector, CheckisAuth } from \"./features/user/authSlice\";\r\n\r\n\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const History = useHistory();\r\n  const { isAuth } = useSelector(AuthSelector)\r\n  useEffect(() => {\r\n    dispatch(CheckisAuth())\r\n\r\n  }, [!isAuth])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Router >\r\n        <NavBar history={History} ></NavBar>\r\n        {isAuth && <Redirect to=\"/user\"></Redirect>}\r\n        <Switch>\r\n          <Route path=\"/user\">\r\n            <UserSpace  ></UserSpace>\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login\r\n            ></Login>\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <Register> </Register>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\app\\store.ts",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\user\\authSlice.ts",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\URL.ts",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\UserSpace.tsx",["66","67","68"],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\NavBar.tsx",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Auth\\Register.tsx",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Auth\\Login.tsx",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Conversation.tsx",["69","70","71"],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\user\\RoomsSlice.ts",[],"D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\components\\Rooms.tsx",["72","73","74","75","76","77"],"/* eslint-disable array-callback-return */\r\nimport { ProSidebar, Menu, MenuItem, SidebarHeader } from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\nimport { useState, useEffect, SetStateAction } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AuthSelector } from \"../features/user/authSlice\";\r\nimport { RoomsSelector } from \"../features/user/RoomsSlice\"\r\n\r\n\r\nexport interface Room {\r\n  members: any[2];\r\n}\r\nconst Rooms = (props: any) => {\r\n\r\n  const { rooms } = useSelector(RoomsSelector)\r\n\r\n  const { currentUser, isAuth } = useSelector(AuthSelector)\r\n  return (\r\n    <>\r\n      <ProSidebar className=\"sidebar\">\r\n        <SidebarHeader>\r\n          <h1> Rooms</h1>\r\n          <br></br>\r\n        </SidebarHeader>\r\n        <Menu iconShape=\"square\" >\r\n          {\r\n            rooms.map((room: any, index: number) => {\r\n              return (\r\n                <MenuItem\r\n                  key={index}\r\n                  onClick={() => { props.setConversation(index) }}\r\n                >\r\n                  <img\r\n                    key={index}\r\n                    src={\"logo192.png\"}\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    alt=\"\"\r\n                  />\r\n                  <div>\r\n                    {room.members.map((member: any) => { if (currentUser && member._id !== currentUser._id) return member.name; })}\r\n                  </div>\r\n                </MenuItem>)\r\n            })\r\n          }\r\n        </Menu>\r\n      </ProSidebar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rooms;\r\n","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\features\\Conversation\\MessagesSlice.ts",["78","79"],"import {\r\n\tcreateSlice,\r\n\tcreateAsyncThunk,\r\n\tReducer\r\n} from \"@reduxjs/toolkit\"\r\n\r\nimport { RootState } from \"../../app/store\"\r\nexport interface Message {\r\n\tto: {\r\n\t\tname: string,\r\n\t\tid: string,\r\n\t},\r\n\tfrom: {\r\n\t\tname: string,\r\n\t\tid: string\r\n\t},\r\n\r\n\tcontent: string,\r\n}\r\ninterface MessagesState {\r\n\tmessages: Message[]\r\n}\r\nconst initialState: MessagesState = {\r\n\tmessages: []\r\n}\r\nconst MessagesReducer = createSlice({\r\n\tname: \"messages\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\taddMessage: (state, { payload }) => {\r\n\t\t\tconsole.log(payload)\r\n\t\t\tstate.messages = [...state.messages, payload as Message]\r\n\r\n\t\t},\r\n\t\tclearAllMessages: (state, { payload }) => {\r\n\t\t\tstate.messages = []\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n})\r\nconst { actions, reducer } = MessagesReducer\r\nexport const { addMessage, clearAllMessages } = actions\r\nexport const MessagesSelector = (state: RootState) => state.MessagesReducer\r\nexport default MessagesReducer.reducer as Reducer<typeof initialState>\r\n","D:\\WebDev\\BackEnd\\dexchat\\dexchat\\src\\app\\hooks.ts",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":33,"column":6,"nodeType":"86","endLine":33,"endColumn":15,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":33,"column":7,"nodeType":"89","endLine":33,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":2,"column":17,"nodeType":"92","messageId":"93","endLine":2,"endColumn":21},{"ruleId":"90","severity":1,"message":"94","line":12,"column":11,"nodeType":"92","messageId":"93","endLine":12,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":29,"column":8,"nodeType":"86","endLine":29,"endColumn":29,"suggestions":"95"},{"ruleId":"90","severity":1,"message":"96","line":3,"column":14,"nodeType":"92","messageId":"93","endLine":3,"endColumn":20},{"ruleId":"90","severity":1,"message":"97","line":5,"column":23,"nodeType":"92","messageId":"93","endLine":5,"endColumn":31},{"ruleId":"84","severity":1,"message":"98","line":48,"column":8,"nodeType":"86","endLine":48,"endColumn":10,"suggestions":"99"},{"ruleId":"90","severity":1,"message":"100","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":13},{"ruleId":"90","severity":1,"message":"101","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":11},{"ruleId":"90","severity":1,"message":"102","line":6,"column":10,"nodeType":"92","messageId":"93","endLine":6,"endColumn":18},{"ruleId":"90","severity":1,"message":"103","line":6,"column":20,"nodeType":"92","messageId":"93","endLine":6,"endColumn":29},{"ruleId":"90","severity":1,"message":"104","line":6,"column":31,"nodeType":"92","messageId":"93","endLine":6,"endColumn":45},{"ruleId":"90","severity":1,"message":"105","line":19,"column":24,"nodeType":"92","messageId":"93","endLine":19,"endColumn":30},{"ruleId":"90","severity":1,"message":"106","line":3,"column":2,"nodeType":"92","messageId":"93","endLine":3,"endColumn":18},{"ruleId":"90","severity":1,"message":"107","line":43,"column":18,"nodeType":"92","messageId":"93","endLine":43,"endColumn":25},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","@typescript-eslint/no-unused-vars","'Room' is defined but never used.","Identifier","unusedVar","'User' is defined but never used.",["111"],"'Socket' is defined but never used.","'useStore' is defined but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'messages'. Either include them or remove the dependency array.",["112"],"'axios' is defined but never used.","'URL' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'SetStateAction' is defined but never used.","'isAuth' is assigned a value but never used.","'createAsyncThunk' is defined but never used.","'reducer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [dispatch]",{"range":"119","text":"120"},"Update the dependencies array to be: [currentUser, dispatch, isAuth]",{"range":"121","text":"122"},"Update the dependencies array to be: [dispatch, messages]",{"range":"123","text":"124"},[787,796],"[dispatch]",[822,843],"[currentUser, dispatch, isAuth]",[1638,1640],"[dispatch, messages]"]