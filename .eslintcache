[{"/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/index.tsx":"1","/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/App.tsx":"2","/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/app/store.ts":"3","/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/components/UserSpace.tsx":"4","/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/components/NavBar.tsx":"5","/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/components/Auth/Register.tsx":"6","/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/components/Auth/Login.tsx":"7","/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/components/Conversation.tsx":"8","/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/components/Contacts.tsx":"9","/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/features/user/authSlice.ts":"10","/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/URL.ts":"11"},{"size":340,"mtime":1628172303287,"results":"12","hashOfConfig":"13"},{"size":2255,"mtime":1628521884977,"results":"14","hashOfConfig":"13"},{"size":441,"mtime":1628368786262,"results":"15","hashOfConfig":"13"},{"size":886,"mtime":1628090956793,"results":"16","hashOfConfig":"13"},{"size":1498,"mtime":1628531369373,"results":"17","hashOfConfig":"13"},{"size":4972,"mtime":1628531633269,"results":"18","hashOfConfig":"13"},{"size":3146,"mtime":1628529393961,"results":"19","hashOfConfig":"13"},{"size":2515,"mtime":1628172833843,"results":"20","hashOfConfig":"13"},{"size":1720,"mtime":1628375405022,"results":"21","hashOfConfig":"13"},{"size":2427,"mtime":1628530999457,"results":"22","hashOfConfig":"13"},{"size":58,"mtime":1628375209822,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1i0b95s",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/index.tsx",[],["48","49"],"/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/App.tsx",[],"/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/app/store.ts",[],"/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/components/UserSpace.tsx",[],"/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/components/NavBar.tsx",["50","51","52"],"/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/components/Auth/Register.tsx",[],"/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/components/Auth/Login.tsx",["53","54","55","56","57","58"],"/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/components/Conversation.tsx",["59"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { io } from 'socket.io-client'\r\nimport { Menu, MenuItem } from 'react-pro-sidebar'\r\n\r\n\r\n\r\nvar socket = io(\"localhost:5001\", { transports: ['websocket'] })\r\nsocket.connect()\r\n\r\nfunction Conversation(props: any) {\r\n\r\n    const [message, setMessage] = useState(\"\" as string)\r\n    const [messages, setMessages] = useState([] as any[])\r\n\r\n    socket.emit('sendusr', { me: props.me })\r\n    socket.once(\"getmsg\", (data: any) => {\r\n        if (data.toid !== props.user.id) return;\r\n        const msgs = messages\r\n        msgs.push({ sender: data.username, message: data.message })\r\n        setMessages(msgs)\r\n    })\r\n\r\n    const onMessage = () => {\r\n        if (message === '') return;\r\n        console.log(props.user)\r\n        socket.emit('sendmsg', {\r\n            from: props.me.id,\r\n            name: props.user.name,\r\n            toid: props.user.id,\r\n            msg: message\r\n        })\r\n        const msgs = messages\r\n        msgs.push({ sender: props.me.username, message: message })\r\n        setMessages(msgs)\r\n        setMessage(\"\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!props.clearMsgs) return;\r\n        props.setClearMsgs(false);\r\n        setMessages([]);\r\n\r\n    }, [props])\r\n\r\n    return (\r\n        <div className='conversation'>\r\n            {props.user.name &&\r\n                <div style={{ height: '95%', overflowY: 'auto', overflowX: 'hidden', scrollBehavior: 'smooth' }} >\r\n                    <h1>{props.user.name}</h1>\r\n                    <Menu iconShape='square'>\r\n\r\n                        {messages.map((msg, index) => {\r\n                            return (\r\n                                <MenuItem key={index}  >\r\n                                    <h5>{msg.sender}</h5>\r\n                                    <br></br>\r\n                                    <a>{msg.message}</a>\r\n                                    <hr style={{ color: '#fff' }}></hr>\r\n                                </MenuItem>\r\n                            );\r\n\r\n                        })}\r\n                    </Menu>\r\n                    <div className='footer'>\r\n                        <input className='footer-input' type='text' onChange={(e) => { setMessage(e.target.value) }} value={message}></input>\r\n                        <Button onClick={() => { onMessage() }} >send</Button>\r\n                    </div>\r\n\r\n                </div >\r\n            }\r\n        </div >\r\n    )\r\n\r\n}\r\nexport default Conversation","/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/components/Contacts.tsx",[],"/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/features/user/authSlice.ts",["60","61"],"/home/madjid/Desktop/Programming/WebDev/backend/Dexchat-full/dexchat/src/URL.ts",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":10,"column":26,"nodeType":"68","messageId":"69","endLine":10,"endColumn":31},{"ruleId":"66","severity":1,"message":"70","line":10,"column":34,"nodeType":"68","messageId":"69","endLine":10,"endColumn":40},{"ruleId":"66","severity":1,"message":"71","line":10,"column":43,"nodeType":"68","messageId":"69","endLine":10,"endColumn":52},{"ruleId":"66","severity":1,"message":"72","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":13},{"ruleId":"66","severity":1,"message":"73","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":11},{"ruleId":"66","severity":1,"message":"74","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":18},{"ruleId":"66","severity":1,"message":"75","line":13,"column":10,"nodeType":"68","messageId":"69","endLine":13,"endColumn":16},{"ruleId":"66","severity":1,"message":"76","line":13,"column":18,"nodeType":"68","messageId":"69","endLine":13,"endColumn":27},{"ruleId":"66","severity":1,"message":"71","line":16,"column":24,"nodeType":"68","messageId":"69","endLine":16,"endColumn":33},{"ruleId":"77","severity":1,"message":"78","line":58,"column":37,"nodeType":"79","endLine":58,"endColumn":40},{"ruleId":"66","severity":1,"message":"80","line":5,"column":3,"nodeType":"68","messageId":"69","endLine":5,"endColumn":16},{"ruleId":"66","severity":1,"message":"81","line":7,"column":17,"nodeType":"68","messageId":"69","endLine":7,"endColumn":30},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'isAuth' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'axios' is defined but never used.","'Url' is defined but never used.","'Redirect' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PayloadAction' is defined but never used.","'AxiosResponse' is defined but never used.","no-global-assign","no-unsafe-negation"]